{
  "contractName": "IRAY",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "portfolioId",
          "type": "bytes32"
        },
        {
          "name": "beneficiary",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "name": "valueToWithdraw",
          "type": "uint256"
        },
        {
          "name": "originalCaller",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "portfolioId",
          "type": "bytes32"
        },
        {
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"name\":\"valueToWithdraw\",\"type\":\"uint256\"},{\"name\":\"originalCaller\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"portfolioId\",\"type\":\"bytes32\"},{\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getTokenValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"portfolioId\",\"type\":\"bytes32\"},{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"deposit(bytes32,uint256)\":{\"details\":\"Anybody can deposit into a RAY token, not just the owner \",\"params\":{\"tokenId\":\"- the id of the RAY token to add value too\",\"value\":\"- the amount in the smallest units in-kind to deposit into the RAY\"}},\"getTokenValue(bytes32,bytes32)\":{\"details\":\"The implementation of this function exists in NAVCalculator \",\"params\":{\"portfolioId\":\"- the id of the portfolio associated with the RAY token\",\"tokenId\":\"- the id of the RAY token to get the value of \"},\"return\":\"an array of two, the first value is the current token value, the          second value is the current price per share of the portfolio\"},\"mint(bytes32,address,uint256)\":{\"params\":{\"beneficiary\":\"- the owner and beneficiary of the RAY token\",\"portfolioId\":\"- the id of the portfolio to associate the RAY token with\",\"value\":\"- the amount in the smallest units in-kind to deposit into RAY \"},\"return\":\"the unique RAY token id, used to reference anything in the RAY system\"},\"redeem(bytes32,uint256,address)\":{\"details\":\"Can partially or fully redeem the RAY token   ///          Only the owner of the RAY token can call this, or the Staked          'GasFunder' smart contract \",\"params\":{\"originalCaller\":\"- only relevant for our `GasFunder` smart contract,                           for everyone else, can be set to anything \",\"tokenId\":\"- the id of the RAY token to redeem value from\",\"valueToWithdraw\":\"- the amount in the smallest units in-kind to redeem from the RAY\"},\"return\":\"the amount transferred to the owner of the RAY token after fees\"}}},\"userdoc\":{\"methods\":{\"deposit(bytes32,uint256)\":{\"notice\":\"Deposits assets into an existing RAY token \"},\"getTokenValue(bytes32,bytes32)\":{\"notice\":\"Get the underlying value of a RAY token (principal + yield earnt) \"},\"mint(bytes32,address,uint256)\":{\"notice\":\"Mints a RAY token of the associated basket of opportunities to the portfolioId \"},\"redeem(bytes32,uint256,address)\":{\"notice\":\"Redeems a RAY token for the underlying value \"}}}},\"settings\":{\"compilationTarget\":{\"/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAY.sol\":\"IRAY\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAY.sol\":{\"keccak256\":\"0x9a6104f15365f7af816bec6170182ec7dccbf080f02435991722a1a34b90b4c3\",\"urls\":[\"bzzr://426ac35129e6115d5adc878759621fad6592a880e6353fd4c7f70b0d82afd7a5\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\ninterface IRAY {\n\n\n  /// @notice  Mints a RAY token of the associated basket of opportunities to the portfolioId\n  ///\n  /// @param   portfolioId - the id of the portfolio to associate the RAY token with\n  /// @param   beneficiary - the owner and beneficiary of the RAY token\n  /// @param   value - the amount in the smallest units in-kind to deposit into RAY\n  ///\n  /// @return  the unique RAY token id, used to reference anything in the RAY system\n  function mint(bytes32 portfolioId, address beneficiary, uint value) external payable returns(bytes32);\n\n\n  /// @notice  Deposits assets into an existing RAY token\n  ///\n  /// @dev     Anybody can deposit into a RAY token, not just the owner\n  ///\n  /// @param   tokenId - the id of the RAY token to add value too\n  /// @param   value - the amount in the smallest units in-kind to deposit into the RAY\n  function deposit(bytes32 tokenId, uint value) external payable;\n\n\n  /// @notice  Redeems a RAY token for the underlying value\n  ///\n  /// @dev     Can partially or fully redeem the RAY token\n  ///\n  ///          Only the owner of the RAY token can call this, or the Staked\n  ///          'GasFunder' smart contract\n  ///\n  /// @param   tokenId - the id of the RAY token to redeem value from\n  /// @param   valueToWithdraw - the amount in the smallest units in-kind to redeem from the RAY\n  /// @param   originalCaller - only relevant for our `GasFunder` smart contract,\n  ///                           for everyone else, can be set to anything\n  ///\n  /// @return  the amount transferred to the owner of the RAY token after fees\n  function redeem(bytes32 tokenId, uint valueToWithdraw, address originalCaller) external returns(uint);\n\n\n  /// @notice  Get the underlying value of a RAY token (principal + yield earnt)\n  ///\n  /// @dev     The implementation of this function exists in NAVCalculator\n  ///\n  /// @param   portfolioId - the id of the portfolio associated with the RAY token\n  /// @param   tokenId - the id of the RAY token to get the value of\n  ///\n  /// @return  an array of two, the first value is the current token value, the\n  ///          second value is the current price per share of the portfolio\n  function getTokenValue(bytes32 portfolioId, bytes32 tokenId) external view returns(uint, uint);\n\n}\n",
  "sourcePath": "/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAY.sol",
  "ast": {
    "absolutePath": "/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAY.sol",
    "exportedSymbols": {
      "IRAY": [
        1528
      ]
    },
    "id": 1529,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1487,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1528,
        "linearizedBaseContracts": [
          1528
        ],
        "name": "IRAY",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice  Mints a RAY token of the associated basket of opportunities to the portfolioId\n\n  /// @param   portfolioId - the id of the portfolio to associate the RAY token with\n @param   beneficiary - the owner and beneficiary of the RAY token\n @param   value - the amount in the smallest units in-kind to deposit into RAY\n\n  /// @return  the unique RAY token id, used to reference anything in the RAY system",
            "id": 1498,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1489,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "500:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1491,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "521:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1493,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "542:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1492,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:54:6"
            },
            "returnParameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1496,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "579:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:9:6"
            },
            "scope": 1528,
            "src": "486:102:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Deposits assets into an existing RAY token\n\n  /// @dev     Anybody can deposit into a RAY token, not just the owner\n\n  /// @param   tokenId - the id of the RAY token to add value too\n @param   value - the amount in the smallest units in-kind to deposit into the RAY",
            "id": 1505,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1500,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1505,
                  "src": "906:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1502,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1505,
                  "src": "923:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:29:6"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:6"
            },
            "scope": 1528,
            "src": "889:63:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Redeems a RAY token for the underlying value\n\n  /// @dev     Can partially or fully redeem the RAY token\n\n  ///          Only the owner of the RAY token can call this, or the Staked\n          'GasFunder' smart contract\n\n  /// @param   tokenId - the id of the RAY token to redeem value from\n @param   valueToWithdraw - the amount in the smallest units in-kind to redeem from the RAY\n @param   originalCaller - only relevant for our `GasFunder` smart contract,\n                           for everyone else, can be set to anything\n\n  /// @return  the amount transferred to the owner of the RAY token after fees",
            "id": 1516,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1507,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1636:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1509,
                  "name": "valueToWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1653:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1508,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1511,
                  "name": "originalCaller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1675:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1635:63:6"
            },
            "returnParameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1514,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1716:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1513,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1715:6:6"
            },
            "scope": 1528,
            "src": "1620:102:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the underlying value of a RAY token (principal + yield earnt)\n\n  /// @dev     The implementation of this function exists in NAVCalculator\n\n  /// @param   portfolioId - the id of the portfolio associated with the RAY token\n @param   tokenId - the id of the RAY token to get the value of\n\n  /// @return  an array of two, the first value is the current token value, the\n          second value is the current price per share of the portfolio",
            "id": 1527,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2232:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2232:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1520,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2253:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2231:38:6"
            },
            "returnParameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1523,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2292:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1525,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2298:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2291:12:6"
            },
            "scope": 1528,
            "src": "2209:95:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1529,
        "src": "33:2274:6"
      }
    ],
    "src": "0:2308:6"
  },
  "legacyAST": {
    "absolutePath": "/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAY.sol",
    "exportedSymbols": {
      "IRAY": [
        1528
      ]
    },
    "id": 1529,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1487,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1528,
        "linearizedBaseContracts": [
          1528
        ],
        "name": "IRAY",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice  Mints a RAY token of the associated basket of opportunities to the portfolioId\n\n  /// @param   portfolioId - the id of the portfolio to associate the RAY token with\n @param   beneficiary - the owner and beneficiary of the RAY token\n @param   value - the amount in the smallest units in-kind to deposit into RAY\n\n  /// @return  the unique RAY token id, used to reference anything in the RAY system",
            "id": 1498,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1489,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "500:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1491,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "521:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1493,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "542:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1492,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:54:6"
            },
            "returnParameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1496,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "579:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:9:6"
            },
            "scope": 1528,
            "src": "486:102:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Deposits assets into an existing RAY token\n\n  /// @dev     Anybody can deposit into a RAY token, not just the owner\n\n  /// @param   tokenId - the id of the RAY token to add value too\n @param   value - the amount in the smallest units in-kind to deposit into the RAY",
            "id": 1505,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1500,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1505,
                  "src": "906:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1502,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1505,
                  "src": "923:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:29:6"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:6"
            },
            "scope": 1528,
            "src": "889:63:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Redeems a RAY token for the underlying value\n\n  /// @dev     Can partially or fully redeem the RAY token\n\n  ///          Only the owner of the RAY token can call this, or the Staked\n          'GasFunder' smart contract\n\n  /// @param   tokenId - the id of the RAY token to redeem value from\n @param   valueToWithdraw - the amount in the smallest units in-kind to redeem from the RAY\n @param   originalCaller - only relevant for our `GasFunder` smart contract,\n                           for everyone else, can be set to anything\n\n  /// @return  the amount transferred to the owner of the RAY token after fees",
            "id": 1516,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1507,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1636:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1509,
                  "name": "valueToWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1653:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1508,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1511,
                  "name": "originalCaller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1675:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1635:63:6"
            },
            "returnParameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1514,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1716:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1513,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1715:6:6"
            },
            "scope": 1528,
            "src": "1620:102:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the underlying value of a RAY token (principal + yield earnt)\n\n  /// @dev     The implementation of this function exists in NAVCalculator\n\n  /// @param   portfolioId - the id of the portfolio associated with the RAY token\n @param   tokenId - the id of the RAY token to get the value of\n\n  /// @return  an array of two, the first value is the current token value, the\n          second value is the current price per share of the portfolio",
            "id": 1527,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2232:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2232:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1520,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2253:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2231:38:6"
            },
            "returnParameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1523,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2292:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1525,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2298:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2291:12:6"
            },
            "scope": 1528,
            "src": "2209:95:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1529,
        "src": "33:2274:6"
      }
    ],
    "src": "0:2308:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-29T03:20:14.849Z",
  "devdoc": {
    "methods": {
      "deposit(bytes32,uint256)": {
        "details": "Anybody can deposit into a RAY token, not just the owner ",
        "params": {
          "tokenId": "- the id of the RAY token to add value too",
          "value": "- the amount in the smallest units in-kind to deposit into the RAY"
        }
      },
      "getTokenValue(bytes32,bytes32)": {
        "details": "The implementation of this function exists in NAVCalculator ",
        "params": {
          "portfolioId": "- the id of the portfolio associated with the RAY token",
          "tokenId": "- the id of the RAY token to get the value of "
        },
        "return": "an array of two, the first value is the current token value, the          second value is the current price per share of the portfolio"
      },
      "mint(bytes32,address,uint256)": {
        "params": {
          "beneficiary": "- the owner and beneficiary of the RAY token",
          "portfolioId": "- the id of the portfolio to associate the RAY token with",
          "value": "- the amount in the smallest units in-kind to deposit into RAY "
        },
        "return": "the unique RAY token id, used to reference anything in the RAY system"
      },
      "redeem(bytes32,uint256,address)": {
        "details": "Can partially or fully redeem the RAY token   ///          Only the owner of the RAY token can call this, or the Staked          'GasFunder' smart contract ",
        "params": {
          "originalCaller": "- only relevant for our `GasFunder` smart contract,                           for everyone else, can be set to anything ",
          "tokenId": "- the id of the RAY token to redeem value from",
          "valueToWithdraw": "- the amount in the smallest units in-kind to redeem from the RAY"
        },
        "return": "the amount transferred to the owner of the RAY token after fees"
      }
    }
  },
  "userdoc": {
    "methods": {
      "deposit(bytes32,uint256)": {
        "notice": "Deposits assets into an existing RAY token "
      },
      "getTokenValue(bytes32,bytes32)": {
        "notice": "Get the underlying value of a RAY token (principal + yield earnt) "
      },
      "mint(bytes32,address,uint256)": {
        "notice": "Mints a RAY token of the associated basket of opportunities to the portfolioId "
      },
      "redeem(bytes32,uint256,address)": {
        "notice": "Redeems a RAY token for the underlying value "
      }
    }
  }
}