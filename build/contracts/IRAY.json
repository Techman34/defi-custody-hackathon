{
  "fileName": "IRAY.sol",
  "contractName": "IRAY",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\ninterface IRAY {\n\n\n  /// @notice  Mints a RAY token of the associated basket of opportunities to the portfolioId\n  ///\n  /// @param   portfolioId - the id of the portfolio to associate the RAY token with\n  /// @param   beneficiary - the owner and beneficiary of the RAY token\n  /// @param   value - the amount in the smallest units in-kind to deposit into RAY\n  ///\n  /// @return  the unique RAY token id, used to reference anything in the RAY system\n  function mint(bytes32 portfolioId, address beneficiary, uint value) external payable returns(bytes32);\n\n\n  /// @notice  Deposits assets into an existing RAY token\n  ///\n  /// @dev     Anybody can deposit into a RAY token, not just the owner\n  ///\n  /// @param   tokenId - the id of the RAY token to add value too\n  /// @param   value - the amount in the smallest units in-kind to deposit into the RAY\n  function deposit(bytes32 tokenId, uint value) external payable;\n\n\n  /// @notice  Redeems a RAY token for the underlying value\n  ///\n  /// @dev     Can partially or fully redeem the RAY token\n  ///\n  ///          Only the owner of the RAY token can call this, or the Staked\n  ///          'GasFunder' smart contract\n  ///\n  /// @param   tokenId - the id of the RAY token to redeem value from\n  /// @param   valueToWithdraw - the amount in the smallest units in-kind to redeem from the RAY\n  /// @param   originalCaller - only relevant for our `GasFunder` smart contract,\n  ///                           for everyone else, can be set to anything\n  ///\n  /// @return  the amount transferred to the owner of the RAY token after fees\n  function redeem(bytes32 tokenId, uint valueToWithdraw, address originalCaller) external returns(uint);\n\n\n  /// @notice  Get the underlying value of a RAY token (principal + yield earnt)\n  ///\n  /// @dev     The implementation of this function exists in NAVCalculator\n  ///\n  /// @param   portfolioId - the id of the portfolio associated with the RAY token\n  /// @param   tokenId - the id of the RAY token to get the value of\n  ///\n  /// @return  an array of two, the first value is the current token value, the\n  ///          second value is the current price per share of the portfolio\n  function getTokenValue(bytes32 portfolioId, bytes32 tokenId) external view returns(uint, uint);\n\n}\n",
  "sourcePath": "contracts/interfaces/ray/IRAY.sol",
  "sourceMap": "",
  "deployedSourceMap": "",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "portfolioId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "portfolioId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "tokenId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "valueToWithdraw",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "originalCaller",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/interfaces/ray/IRAY.sol",
    "exportedSymbols": {
      "IRAY": [
        2283
      ]
    },
    "id": 2284,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2242,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:13"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2283,
        "linearizedBaseContracts": [
          2283
        ],
        "name": "IRAY",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice  Mints a RAY token of the associated basket of opportunities to the portfolioId\n\n  /// @param   portfolioId - the id of the portfolio to associate the RAY token with\n @param   beneficiary - the owner and beneficiary of the RAY token\n @param   value - the amount in the smallest units in-kind to deposit into RAY\n\n  /// @return  the unique RAY token id, used to reference anything in the RAY system",
            "id": 2253,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2244,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2253,
                  "src": "500:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2246,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2253,
                  "src": "521:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2248,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2253,
                  "src": "542:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2247,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "499:54:13"
            },
            "returnParameters": {
              "id": 2252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2253,
                  "src": "579:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2250,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:9:13"
            },
            "scope": 2283,
            "src": "486:102:13",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Deposits assets into an existing RAY token\n\n  /// @dev     Anybody can deposit into a RAY token, not just the owner\n\n  /// @param   tokenId - the id of the RAY token to add value too\n @param   value - the amount in the smallest units in-kind to deposit into the RAY",
            "id": 2260,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2255,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2260,
                  "src": "906:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2257,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2260,
                  "src": "923:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2256,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:29:13"
            },
            "returnParameters": {
              "id": 2259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:13"
            },
            "scope": 2283,
            "src": "889:63:13",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Redeems a RAY token for the underlying value\n\n  /// @dev     Can partially or fully redeem the RAY token\n\n  ///          Only the owner of the RAY token can call this, or the Staked\n          'GasFunder' smart contract\n\n  /// @param   tokenId - the id of the RAY token to redeem value from\n @param   valueToWithdraw - the amount in the smallest units in-kind to redeem from the RAY\n @param   originalCaller - only relevant for our `GasFunder` smart contract,\n                           for everyone else, can be set to anything\n\n  /// @return  the amount transferred to the owner of the RAY token after fees",
            "id": 2271,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2262,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2271,
                  "src": "1636:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2261,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2264,
                  "name": "valueToWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 2271,
                  "src": "1653:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2263,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2266,
                  "name": "originalCaller",
                  "nodeType": "VariableDeclaration",
                  "scope": 2271,
                  "src": "1675:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1635:63:13"
            },
            "returnParameters": {
              "id": 2270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2269,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2271,
                  "src": "1716:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2268,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1715:6:13"
            },
            "scope": 2283,
            "src": "1620:102:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the underlying value of a RAY token (principal + yield earnt)\n\n  /// @dev     The implementation of this function exists in NAVCalculator\n\n  /// @param   portfolioId - the id of the portfolio associated with the RAY token\n @param   tokenId - the id of the RAY token to get the value of\n\n  /// @return  an array of two, the first value is the current token value, the\n          second value is the current price per share of the portfolio",
            "id": 2282,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2273,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "2232:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2232:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2275,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "2253:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2274,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2231:38:13"
            },
            "returnParameters": {
              "id": 2281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2278,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "2292:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2280,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2282,
                  "src": "2298:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2291:12:13"
            },
            "scope": 2283,
            "src": "2209:95:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2284,
        "src": "33:2274:13"
      }
    ],
    "src": "0:2308:13"
  },
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang",
    "optimizer": {},
    "evmVersion": "constantinople"
  },
  "networks": {}
}
