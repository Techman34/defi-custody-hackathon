{
  "contractName": "IRAYStorage",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "rayTokenId",
          "type": "bytes32"
        }
      ],
      "name": "getTokenKey",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "portfolioId",
          "type": "bytes32"
        }
      ],
      "name": "getPrincipalAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "principalAddress",
          "type": "address"
        }
      ],
      "name": "getIsERC20",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "contractId",
          "type": "bytes32"
        }
      ],
      "name": "getContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "portfolioId",
          "type": "bytes32"
        },
        {
          "name": "rayTokenId",
          "type": "bytes32"
        }
      ],
      "name": "getTokenShares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "portfolioId",
          "type": "bytes32"
        },
        {
          "name": "rayTokenId",
          "type": "bytes32"
        }
      ],
      "name": "getTokenCapital",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "portfolioId",
          "type": "bytes32"
        },
        {
          "name": "rayTokenId",
          "type": "bytes32"
        }
      ],
      "name": "getTokenAllowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"contractId\",\"type\":\"bytes32\"}],\"name\":\"getContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"portfolioId\",\"type\":\"bytes32\"},{\"name\":\"rayTokenId\",\"type\":\"bytes32\"}],\"name\":\"getTokenCapital\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"portfolioId\",\"type\":\"bytes32\"}],\"name\":\"getPrincipalAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rayTokenId\",\"type\":\"bytes32\"}],\"name\":\"getTokenKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"principalAddress\",\"type\":\"address\"}],\"name\":\"getIsERC20\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"portfolioId\",\"type\":\"bytes32\"},{\"name\":\"rayTokenId\",\"type\":\"bytes32\"}],\"name\":\"getTokenAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"portfolioId\",\"type\":\"bytes32\"},{\"name\":\"rayTokenId\",\"type\":\"bytes32\"}],\"name\":\"getTokenShares\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getContractAddress(bytes32)\":{\"params\":{\"contractId\":\"- Each contract has an id represented by the result of                       a keccak256() of the contract name.   ///                       Example: PortfolioManager.sol can be dynamically referenced                       by getContractAddress(keccak256('PortfolioManagerContract'));\"}}}},\"userdoc\":{\"methods\":{\"getContractAddress(bytes32)\":{\"notice\":\"Dynamically get the contract address of different RAY smart contracts \"},\"getIsERC20(address)\":{\"notice\":\"Get if a contract address follows the ERC20 standard or not\"},\"getPrincipalAddress(bytes32)\":{\"notice\":\"Get the contract address of the underlying asset associated with a          portfolioId\"},\"getTokenAllowance(bytes32,bytes32)\":{\"notice\":\"Get the allowance credited to a RAY token - allowance decides what          amount of value will be charged a fee\"},\"getTokenCapital(bytes32,bytes32)\":{\"notice\":\"Get the capital credited to a RAY token\"},\"getTokenKey(bytes32)\":{\"notice\":\"Get the portfolioId associated with a RAY token\"},\"getTokenShares(bytes32,bytes32)\":{\"notice\":\"Get the shares owned by a RAY token\"}},\"notice\":\"Basic interface containing some useful functions for RAY integration.  /// Author:   Devan Purhar\"}},\"settings\":{\"compilationTarget\":{\"/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAYStorage.sol\":\"IRAYStorage\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAYStorage.sol\":{\"keccak256\":\"0x66bb9ed2f3748bc4f1039584c7f9ea39c1ee76e361beb31961a0b87f4efb5570\",\"urls\":[\"bzzr://ddec937215883a1b4a52f3672368bd371feab8319f0883f5723b8366457d44d7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\n\n/// @notice  Basic interface containing some useful functions for RAY integration.\n///\n/// Author:   Devan Purhar\n\ninterface IRAYStorage {\n\n  /// @notice  Get the portfolioId associated with a RAY token\n  function getTokenKey(bytes32 rayTokenId) external view returns (bytes32);\n\n\n  /// @notice  Get the contract address of the underlying asset associated with a\n  ///          portfolioId\n  function getPrincipalAddress(bytes32 portfolioId) external view returns (address);\n\n\n  /// @notice  Get if a contract address follows the ERC20 standard or not\n  function getIsERC20(address principalAddress) external view returns (bool);\n\n\n  /// @notice  Dynamically get the contract address of different RAY smart contracts\n  ///\n  /// @param   contractId - Each contract has an id represented by the result of\n  ///                       a keccak256() of the contract name.\n  ///\n  ///                       Example: PortfolioManager.sol can be dynamically referenced\n  ///                       by getContractAddress(keccak256('PortfolioManagerContract'));\n  function getContractAddress(bytes32 contractId) external view returns (address);\n\n\n  /// @notice  Get the shares owned by a RAY token\n  function getTokenShares(bytes32 portfolioId, bytes32 rayTokenId) external view returns (uint);\n\n\n  /// @notice  Get the capital credited to a RAY token\n  function getTokenCapital(bytes32 portfolioId, bytes32 rayTokenId) external view returns (uint);\n\n\n  /// @notice  Get the allowance credited to a RAY token - allowance decides what\n  ///          amount of value will be charged a fee\n  function getTokenAllowance(bytes32 portfolioId, bytes32 rayTokenId) external view returns (uint);\n\n}\n",
  "sourcePath": "/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAYStorage.sol",
  "ast": {
    "absolutePath": "/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAYStorage.sol",
    "exportedSymbols": {
      "IRAYStorage": [
        1577
      ]
    },
    "id": 1578,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1521,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:7"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice  Basic interface containing some useful functions for RAY integration.\n\n/// Author:   Devan Purhar",
        "fullyImplemented": false,
        "id": 1577,
        "linearizedBaseContracts": [
          1577
        ],
        "name": "IRAYStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice  Get the portfolioId associated with a RAY token",
            "id": 1528,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1523,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "260:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:20:7"
            },
            "returnParameters": {
              "id": 1527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1526,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "303:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "302:9:7"
            },
            "scope": 1577,
            "src": "239:73:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the contract address of the underlying asset associated with a\n          portfolioId",
            "id": 1535,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrincipalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1530,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "455:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:21:7"
            },
            "returnParameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1533,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "499:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "498:9:7"
            },
            "scope": 1577,
            "src": "426:82:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get if a contract address follows the ERC20 standard or not",
            "id": 1542,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getIsERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1537,
                  "name": "principalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "608:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "607:26:7"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1540,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "657:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "656:6:7"
            },
            "scope": 1577,
            "src": "588:75:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Dynamically get the contract address of different RAY smart contracts\n\n  /// @param   contractId - Each contract has an id represented by the result of\n                       a keccak256() of the contract name.\n\n  ///                       Example: PortfolioManager.sol can be dynamically referenced\n                       by getContractAddress(keccak256('PortfolioManagerContract'));",
            "id": 1549,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "name": "contractId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "1116:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1115:20:7"
            },
            "returnParameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "1159:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1158:9:7"
            },
            "scope": 1577,
            "src": "1088:80:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the shares owned by a RAY token",
            "id": 1558,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "1248:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "1269:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1247:41:7"
            },
            "returnParameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "1312:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1311:6:7"
            },
            "scope": 1577,
            "src": "1224:94:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the capital credited to a RAY token",
            "id": 1567,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenCapital",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1403:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1424:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1402:41:7"
            },
            "returnParameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1467:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1466:6:7"
            },
            "scope": 1577,
            "src": "1378:95:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the allowance credited to a RAY token - allowance decides what\n          amount of value will be charged a fee",
            "id": 1576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "1640:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "1661:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1639:41:7"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "1704:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1703:6:7"
            },
            "scope": 1577,
            "src": "1613:97:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1578,
        "src": "149:1564:7"
      }
    ],
    "src": "0:1714:7"
  },
  "legacyAST": {
    "absolutePath": "/home/ilgiz/defi-custody-hackathon/contracts/interfaces/ray/IRAYStorage.sol",
    "exportedSymbols": {
      "IRAYStorage": [
        1577
      ]
    },
    "id": 1578,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1521,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:7"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice  Basic interface containing some useful functions for RAY integration.\n\n/// Author:   Devan Purhar",
        "fullyImplemented": false,
        "id": 1577,
        "linearizedBaseContracts": [
          1577
        ],
        "name": "IRAYStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice  Get the portfolioId associated with a RAY token",
            "id": 1528,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1523,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "260:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:20:7"
            },
            "returnParameters": {
              "id": 1527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1526,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "303:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1525,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "302:9:7"
            },
            "scope": 1577,
            "src": "239:73:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the contract address of the underlying asset associated with a\n          portfolioId",
            "id": 1535,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrincipalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1530,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "455:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:21:7"
            },
            "returnParameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1533,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1535,
                  "src": "499:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "498:9:7"
            },
            "scope": 1577,
            "src": "426:82:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get if a contract address follows the ERC20 standard or not",
            "id": 1542,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getIsERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1537,
                  "name": "principalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "608:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "607:26:7"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1540,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "657:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "656:6:7"
            },
            "scope": 1577,
            "src": "588:75:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Dynamically get the contract address of different RAY smart contracts\n\n  /// @param   contractId - Each contract has an id represented by the result of\n                       a keccak256() of the contract name.\n\n  ///                       Example: PortfolioManager.sol can be dynamically referenced\n                       by getContractAddress(keccak256('PortfolioManagerContract'));",
            "id": 1549,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "name": "contractId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "1116:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1115:20:7"
            },
            "returnParameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "1159:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1158:9:7"
            },
            "scope": 1577,
            "src": "1088:80:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the shares owned by a RAY token",
            "id": 1558,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "1248:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "1269:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1247:41:7"
            },
            "returnParameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "1312:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1311:6:7"
            },
            "scope": 1577,
            "src": "1224:94:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the capital credited to a RAY token",
            "id": 1567,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenCapital",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1403:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1424:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1402:41:7"
            },
            "returnParameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1467:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1466:6:7"
            },
            "scope": 1577,
            "src": "1378:95:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice  Get the allowance credited to a RAY token - allowance decides what\n          amount of value will be charged a fee",
            "id": 1576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "name": "portfolioId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "1640:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "name": "rayTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "1661:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1639:41:7"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "1704:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1703:6:7"
            },
            "scope": 1577,
            "src": "1613:97:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1578,
        "src": "149:1564:7"
      }
    ],
    "src": "0:1714:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-27T22:34:34.481Z",
  "devdoc": {
    "methods": {
      "getContractAddress(bytes32)": {
        "params": {
          "contractId": "- Each contract has an id represented by the result of                       a keccak256() of the contract name.   ///                       Example: PortfolioManager.sol can be dynamically referenced                       by getContractAddress(keccak256('PortfolioManagerContract'));"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "getContractAddress(bytes32)": {
        "notice": "Dynamically get the contract address of different RAY smart contracts "
      },
      "getIsERC20(address)": {
        "notice": "Get if a contract address follows the ERC20 standard or not"
      },
      "getPrincipalAddress(bytes32)": {
        "notice": "Get the contract address of the underlying asset associated with a          portfolioId"
      },
      "getTokenAllowance(bytes32,bytes32)": {
        "notice": "Get the allowance credited to a RAY token - allowance decides what          amount of value will be charged a fee"
      },
      "getTokenCapital(bytes32,bytes32)": {
        "notice": "Get the capital credited to a RAY token"
      },
      "getTokenKey(bytes32)": {
        "notice": "Get the portfolioId associated with a RAY token"
      },
      "getTokenShares(bytes32,bytes32)": {
        "notice": "Get the shares owned by a RAY token"
      }
    },
    "notice": "Basic interface containing some useful functions for RAY integration.  /// Author:   Devan Purhar"
  }
}